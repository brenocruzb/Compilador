/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class ATotal extends PTotal
{
    private TPrograma _programa_;
    private TIdentificador _identificador_;
    private TPontovirgula _pontovirgula_;
    private final LinkedList<PDeclaracao> _declaracao_ = new LinkedList<PDeclaracao>();
    private TInicio _inicio_;
    private final LinkedList<PConstrucao> _construcao_ = new LinkedList<PConstrucao>();
    private TFim _fim_;
    private TPonto _ponto_;

    public ATotal()
    {
        // Constructor
    }

    public ATotal(
        @SuppressWarnings("hiding") TPrograma _programa_,
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TPontovirgula _pontovirgula_,
        @SuppressWarnings("hiding") List<?> _declaracao_,
        @SuppressWarnings("hiding") TInicio _inicio_,
        @SuppressWarnings("hiding") List<?> _construcao_,
        @SuppressWarnings("hiding") TFim _fim_,
        @SuppressWarnings("hiding") TPonto _ponto_)
    {
        // Constructor
        setPrograma(_programa_);

        setIdentificador(_identificador_);

        setPontovirgula(_pontovirgula_);

        setDeclaracao(_declaracao_);

        setInicio(_inicio_);

        setConstrucao(_construcao_);

        setFim(_fim_);

        setPonto(_ponto_);

    }

    @Override
    public Object clone()
    {
        return new ATotal(
            cloneNode(this._programa_),
            cloneNode(this._identificador_),
            cloneNode(this._pontovirgula_),
            cloneList(this._declaracao_),
            cloneNode(this._inicio_),
            cloneList(this._construcao_),
            cloneNode(this._fim_),
            cloneNode(this._ponto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATotal(this);
    }

    public TPrograma getPrograma()
    {
        return this._programa_;
    }

    public void setPrograma(TPrograma node)
    {
        if(this._programa_ != null)
        {
            this._programa_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programa_ = node;
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TPontovirgula getPontovirgula()
    {
        return this._pontovirgula_;
    }

    public void setPontovirgula(TPontovirgula node)
    {
        if(this._pontovirgula_ != null)
        {
            this._pontovirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontovirgula_ = node;
    }

    public LinkedList<PDeclaracao> getDeclaracao()
    {
        return this._declaracao_;
    }

    public void setDeclaracao(List<?> list)
    {
        for(PDeclaracao e : this._declaracao_)
        {
            e.parent(null);
        }
        this._declaracao_.clear();

        for(Object obj_e : list)
        {
            PDeclaracao e = (PDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._declaracao_.add(e);
        }
    }

    public TInicio getInicio()
    {
        return this._inicio_;
    }

    public void setInicio(TInicio node)
    {
        if(this._inicio_ != null)
        {
            this._inicio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicio_ = node;
    }

    public LinkedList<PConstrucao> getConstrucao()
    {
        return this._construcao_;
    }

    public void setConstrucao(List<?> list)
    {
        for(PConstrucao e : this._construcao_)
        {
            e.parent(null);
        }
        this._construcao_.clear();

        for(Object obj_e : list)
        {
            PConstrucao e = (PConstrucao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._construcao_.add(e);
        }
    }

    public TFim getFim()
    {
        return this._fim_;
    }

    public void setFim(TFim node)
    {
        if(this._fim_ != null)
        {
            this._fim_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fim_ = node;
    }

    public TPonto getPonto()
    {
        return this._ponto_;
    }

    public void setPonto(TPonto node)
    {
        if(this._ponto_ != null)
        {
            this._ponto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ponto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programa_)
            + toString(this._identificador_)
            + toString(this._pontovirgula_)
            + toString(this._declaracao_)
            + toString(this._inicio_)
            + toString(this._construcao_)
            + toString(this._fim_)
            + toString(this._ponto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programa_ == child)
        {
            this._programa_ = null;
            return;
        }

        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._pontovirgula_ == child)
        {
            this._pontovirgula_ = null;
            return;
        }

        if(this._declaracao_.remove(child))
        {
            return;
        }

        if(this._inicio_ == child)
        {
            this._inicio_ = null;
            return;
        }

        if(this._construcao_.remove(child))
        {
            return;
        }

        if(this._fim_ == child)
        {
            this._fim_ = null;
            return;
        }

        if(this._ponto_ == child)
        {
            this._ponto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programa_ == oldChild)
        {
            setPrograma((TPrograma) newChild);
            return;
        }

        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._pontovirgula_ == oldChild)
        {
            setPontovirgula((TPontovirgula) newChild);
            return;
        }

        for(ListIterator<PDeclaracao> i = this._declaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._inicio_ == oldChild)
        {
            setInicio((TInicio) newChild);
            return;
        }

        for(ListIterator<PConstrucao> i = this._construcao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PConstrucao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fim_ == oldChild)
        {
            setFim((TFim) newChild);
            return;
        }

        if(this._ponto_ == oldChild)
        {
            setPonto((TPonto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
