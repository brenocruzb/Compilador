/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AEncadeamentoDeclaracaoVariavelVirgula extends PDeclaracaoVariavelVirgula
{
    private PDeclaracaoVariavelVirgula _declaracaoVariavelVirgula_;
    private PVariaveld _variaveld_;
    private TVirgula _virgula_;

    public AEncadeamentoDeclaracaoVariavelVirgula()
    {
        // Constructor
    }

    public AEncadeamentoDeclaracaoVariavelVirgula(
        @SuppressWarnings("hiding") PDeclaracaoVariavelVirgula _declaracaoVariavelVirgula_,
        @SuppressWarnings("hiding") PVariaveld _variaveld_,
        @SuppressWarnings("hiding") TVirgula _virgula_)
    {
        // Constructor
        setDeclaracaoVariavelVirgula(_declaracaoVariavelVirgula_);

        setVariaveld(_variaveld_);

        setVirgula(_virgula_);

    }

    @Override
    public Object clone()
    {
        return new AEncadeamentoDeclaracaoVariavelVirgula(
            cloneNode(this._declaracaoVariavelVirgula_),
            cloneNode(this._variaveld_),
            cloneNode(this._virgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEncadeamentoDeclaracaoVariavelVirgula(this);
    }

    public PDeclaracaoVariavelVirgula getDeclaracaoVariavelVirgula()
    {
        return this._declaracaoVariavelVirgula_;
    }

    public void setDeclaracaoVariavelVirgula(PDeclaracaoVariavelVirgula node)
    {
        if(this._declaracaoVariavelVirgula_ != null)
        {
            this._declaracaoVariavelVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaracaoVariavelVirgula_ = node;
    }

    public PVariaveld getVariaveld()
    {
        return this._variaveld_;
    }

    public void setVariaveld(PVariaveld node)
    {
        if(this._variaveld_ != null)
        {
            this._variaveld_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variaveld_ = node;
    }

    public TVirgula getVirgula()
    {
        return this._virgula_;
    }

    public void setVirgula(TVirgula node)
    {
        if(this._virgula_ != null)
        {
            this._virgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._declaracaoVariavelVirgula_)
            + toString(this._variaveld_)
            + toString(this._virgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._declaracaoVariavelVirgula_ == child)
        {
            this._declaracaoVariavelVirgula_ = null;
            return;
        }

        if(this._variaveld_ == child)
        {
            this._variaveld_ = null;
            return;
        }

        if(this._virgula_ == child)
        {
            this._virgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._declaracaoVariavelVirgula_ == oldChild)
        {
            setDeclaracaoVariavelVirgula((PDeclaracaoVariavelVirgula) newChild);
            return;
        }

        if(this._variaveld_ == oldChild)
        {
            setVariaveld((PVariaveld) newChild);
            return;
        }

        if(this._virgula_ == oldChild)
        {
            setVirgula((TVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
