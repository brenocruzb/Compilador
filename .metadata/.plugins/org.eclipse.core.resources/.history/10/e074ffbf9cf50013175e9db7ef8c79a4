Helpers
tudo = [0..0xffff];
digito = ['0' .. '9'];
letra = ['a' .. 'z'] | ['A' .. 'Z'];
under = '_';
simbolo = letra | under;

hcomentario = '/''/' [tudo-10]* (10);

States
normal, comentado;


Tokens
{normal} adicao = '+';
{normal} subtracao = '-';
{normal} multiplicacao = '*';
{normal} divisao = '/';

{normal} caractere = 'caractere';
{normal} real = 'real';
{normal} inteiro = 'inteiro';
{normal} string = '''[tudo-''']*''';

{normal} pontovirgula = ';';
{normal} doispontos = ':';
{normal} maiorque = '>';
{normal} menorque = '<';
{normal} igual = '=';
{normal} maiorigual = '>=';
{normal} menorigual = '<=';
{normal} diferente = '<>';
{normal} atribuicao = '<-';

{normal} const = 'const';
{normal} programa = 'programa';
{normal} inicio = 'inicio';
{normal} fim = 'fim';
{normal} ponto = '.';
{normal} var = 'var';
{normal} escreva = 'escreva';
{normal} leia = 'leia';

{normal} se = 'se';
{normal} entao = 'entao';
{normal} senao = 'senao';
{normal} fimse = 'fim se';
{normal} aspa = ''';
{normal} enquanto = 'enquanto';
{normal} fimenquanto = 'fim enquanto';
{normal} para = 'para';
{normal} ate = 'ate';
{normal} faca = 'faca';
{normal} fimpara = 'fim para';
{normal} passo = 'passo';
{normal} avalie = 'avalie';
{normal} caso = 'caso';
{normal} fimavalie = 'fim avalie';

{normal} abrecolchete = '[';
{normal} fecharcolchete = ']';

{normal} e = 'e';
{normal} ou = 'ou';
{normal} xor = 'xor';
{normal} nao = 'nao';
{normal} virgula = ',';
{normal} abreparenteses = '(';
{normal} fechaparenteses = ')';
{normal} numero = digito+;
{normal} numero_real = digito+'.'digito+;
{normal} identificador = simbolo (simbolo|digito)*;

{normal} comentarioemlinha = hcomentario;
{normal} lf = 10;
{normal} espaco = ' '+ | '	';
{normal} cr = 13;

{normal->comentado, comentado} comentado = '/*';
{comentado} comentadofinal = '*/';
{comentado} corpo = [tudo -['*' + '/']]*;
{comentado} estrela = '*';
{comentado} barra = '/';

Ignored Tokens
lf,
espaco,
comentarioemlinha,
cr,
comentado;

Productions 

total = 
programa identificador pontovirgula
inicio
super_declaracao_variavel
corpo_programa
fim ponto;

super_declaracao_variavel = super_declaracao_variavel declaracao_variavel | {vazio};
declaracao_variavel = {conjunto} tipo doispontos declaracao_variavel_virgula variavel pontovirgula |{dconstante}const identificador valor pontovirgula |tipo doispontos variavel pontovirgula;
declaracao_variavel_virgula = {encadeamento}declaracao_variavel_virgula variavel virgula| variavel virgula;
variavel = identificador | {vetor}identificador abrecolchete numero fecharcolchete;
corpo_programa = comando_se | {vazio};
tipo = {c} caractere | {i} inteiro | real;
valor = {str} string | {num} numero | real; 

exp = exp soma termo |{term} termo;
soma = adicao | {sub} subtracao;
termo = termo mult fator | {fat} fator;
mult = multiplicacao | {div} divisao;
fator = abreparenteses exp fechaparenteses | {num} numero | {ind} identificador;

exp_logica = expp_logica | {not} nao exp_logica;
expp_logica = expp_logica simbolo_logica termo_logica | {term} termo_logica;
simbolo_logica = {maq} maiorque | {meq} menorque | {ig} igual | {maig} maiorigual | {meig} menorigual | {dif} diferente | {e} e | {ou} ou | xor;
termo_logica = exp | {explog} abreparenteses exp_logica fechaparenteses;

comando_se = se abreparenteses exp_logica fechaparenteses entao corpo_programa fimse pontovirgula | 
             se abreparenteses exp_logica fechaparenteses entao corpo_programa senao comando fimse pontovirgula;  

