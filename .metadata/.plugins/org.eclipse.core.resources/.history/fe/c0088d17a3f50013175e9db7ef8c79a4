/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AElseIfDecl extends PIfDecl
{
    private PCorpoPrograma _corpoPrograma_;
    private PElseParte _elseParte_;

    public AElseIfDecl()
    {
        // Constructor
    }

    public AElseIfDecl(
        @SuppressWarnings("hiding") PCorpoPrograma _corpoPrograma_,
        @SuppressWarnings("hiding") PElseParte _elseParte_)
    {
        // Constructor
        setCorpoPrograma(_corpoPrograma_);

        setElseParte(_elseParte_);

    }

    @Override
    public Object clone()
    {
        return new AElseIfDecl(
            cloneNode(this._corpoPrograma_),
            cloneNode(this._elseParte_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAElseIfDecl(this);
    }

    public PCorpoPrograma getCorpoPrograma()
    {
        return this._corpoPrograma_;
    }

    public void setCorpoPrograma(PCorpoPrograma node)
    {
        if(this._corpoPrograma_ != null)
        {
            this._corpoPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._corpoPrograma_ = node;
    }

    public PElseParte getElseParte()
    {
        return this._elseParte_;
    }

    public void setElseParte(PElseParte node)
    {
        if(this._elseParte_ != null)
        {
            this._elseParte_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elseParte_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._corpoPrograma_)
            + toString(this._elseParte_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._corpoPrograma_ == child)
        {
            this._corpoPrograma_ = null;
            return;
        }

        if(this._elseParte_ == child)
        {
            this._elseParte_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._corpoPrograma_ == oldChild)
        {
            setCorpoPrograma((PCorpoPrograma) newChild);
            return;
        }

        if(this._elseParte_ == oldChild)
        {
            setElseParte((PElseParte) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
