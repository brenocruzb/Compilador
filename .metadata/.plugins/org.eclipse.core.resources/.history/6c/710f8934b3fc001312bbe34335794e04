/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AComandoRepita extends PComandoRepita
{
    private TRepita _repita_;
    private PComandos _comandos_;
    private TAte _ate_;
    private TAbreparenteses _abreparenteses_;
    private PExpLogica _expLogica_;
    private TFechaparenteses _fechaparenteses_;

    public AComandoRepita()
    {
        // Constructor
    }

    public AComandoRepita(
        @SuppressWarnings("hiding") TRepita _repita_,
        @SuppressWarnings("hiding") PComandos _comandos_,
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") TAbreparenteses _abreparenteses_,
        @SuppressWarnings("hiding") PExpLogica _expLogica_,
        @SuppressWarnings("hiding") TFechaparenteses _fechaparenteses_)
    {
        // Constructor
        setRepita(_repita_);

        setComandos(_comandos_);

        setAte(_ate_);

        setAbreparenteses(_abreparenteses_);

        setExpLogica(_expLogica_);

        setFechaparenteses(_fechaparenteses_);

    }

    @Override
    public Object clone()
    {
        return new AComandoRepita(
            cloneNode(this._repita_),
            cloneNode(this._comandos_),
            cloneNode(this._ate_),
            cloneNode(this._abreparenteses_),
            cloneNode(this._expLogica_),
            cloneNode(this._fechaparenteses_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoRepita(this);
    }

    public TRepita getRepita()
    {
        return this._repita_;
    }

    public void setRepita(TRepita node)
    {
        if(this._repita_ != null)
        {
            this._repita_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._repita_ = node;
    }

    public PComandos getComandos()
    {
        return this._comandos_;
    }

    public void setComandos(PComandos node)
    {
        if(this._comandos_ != null)
        {
            this._comandos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandos_ = node;
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public TAbreparenteses getAbreparenteses()
    {
        return this._abreparenteses_;
    }

    public void setAbreparenteses(TAbreparenteses node)
    {
        if(this._abreparenteses_ != null)
        {
            this._abreparenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreparenteses_ = node;
    }

    public PExpLogica getExpLogica()
    {
        return this._expLogica_;
    }

    public void setExpLogica(PExpLogica node)
    {
        if(this._expLogica_ != null)
        {
            this._expLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica_ = node;
    }

    public TFechaparenteses getFechaparenteses()
    {
        return this._fechaparenteses_;
    }

    public void setFechaparenteses(TFechaparenteses node)
    {
        if(this._fechaparenteses_ != null)
        {
            this._fechaparenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaparenteses_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._repita_)
            + toString(this._comandos_)
            + toString(this._ate_)
            + toString(this._abreparenteses_)
            + toString(this._expLogica_)
            + toString(this._fechaparenteses_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._repita_ == child)
        {
            this._repita_ = null;
            return;
        }

        if(this._comandos_ == child)
        {
            this._comandos_ = null;
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._abreparenteses_ == child)
        {
            this._abreparenteses_ = null;
            return;
        }

        if(this._expLogica_ == child)
        {
            this._expLogica_ = null;
            return;
        }

        if(this._fechaparenteses_ == child)
        {
            this._fechaparenteses_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._repita_ == oldChild)
        {
            setRepita((TRepita) newChild);
            return;
        }

        if(this._comandos_ == oldChild)
        {
            setComandos((PComandos) newChild);
            return;
        }

        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._abreparenteses_ == oldChild)
        {
            setAbreparenteses((TAbreparenteses) newChild);
            return;
        }

        if(this._expLogica_ == oldChild)
        {
            setExpLogica((PExpLogica) newChild);
            return;
        }

        if(this._fechaparenteses_ == oldChild)
        {
            setFechaparenteses((TFechaparenteses) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
