/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AParabool extends PParabool
{
    private PLcomp _lcomp_;

    public AParabool()
    {
        // Constructor
    }

    public AParabool(
        @SuppressWarnings("hiding") PLcomp _lcomp_)
    {
        // Constructor
        setLcomp(_lcomp_);

    }

    @Override
    public Object clone()
    {
        return new AParabool(
            cloneNode(this._lcomp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParabool(this);
    }

    public PLcomp getLcomp()
    {
        return this._lcomp_;
    }

    public void setLcomp(PLcomp node)
    {
        if(this._lcomp_ != null)
        {
            this._lcomp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lcomp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lcomp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lcomp_ == child)
        {
            this._lcomp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lcomp_ == oldChild)
        {
            setLcomp((PLcomp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
