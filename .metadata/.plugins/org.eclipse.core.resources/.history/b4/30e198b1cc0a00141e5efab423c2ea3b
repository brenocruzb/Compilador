/* This file was generated by SableCC (http://www.sablecc.org/). */

package parser;

import lexer.*;
import node.*;
import analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PTotal node1 = (PTotal) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce ATotal */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce ASuperDeclaracaoVariavel */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AVazioSuperDeclaracaoVariavel */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AConjuntoDeclaracaoVariavel */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce ADconstanteDeclaracaoVariavel */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce ADeclaracaoVariavel */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list, false);
            }
            break;
            case 6: /* reduce AEncadeamentoDeclaracaoVariavelVirgula */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list, false);
            }
            break;
            case 7: /* reduce ADeclaracaoVariavelVirgula */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce AVariaveld */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list, false);
            }
            break;
            case 9: /* reduce AVetorVariaveld */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce ACorpoPrograma */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list, false);
            }
            break;
            case 11: /* reduce ACTipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce AITipo */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list, false);
            }
            break;
            case 13: /* reduce ATipo */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce AStrValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list, false);
            }
            break;
            case 15: /* reduce ANumValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list, false);
            }
            break;
            case 16: /* reduce AValor */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list, false);
            }
            break;
            case 17: /* reduce AExpr */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list, false);
            }
            break;
            case 18: /* reduce ALogicaExpr */
            {
                ArrayList<Object> list = new18();
                push(goTo(8), list, false);
            }
            break;
            case 19: /* reduce AExpnum */
            {
                ArrayList<Object> list = new19();
                push(goTo(9), list, false);
            }
            break;
            case 20: /* reduce ATermExpnum */
            {
                ArrayList<Object> list = new20();
                push(goTo(9), list, false);
            }
            break;
            case 21: /* reduce ASoma */
            {
                ArrayList<Object> list = new21();
                push(goTo(10), list, false);
            }
            break;
            case 22: /* reduce ASubSoma */
            {
                ArrayList<Object> list = new22();
                push(goTo(10), list, false);
            }
            break;
            case 23: /* reduce ATermo */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce AFatTermo */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AMult */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce ADivMult */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list, false);
            }
            break;
            case 27: /* reduce AFator */
            {
                ArrayList<Object> list = new27();
                push(goTo(13), list, false);
            }
            break;
            case 28: /* reduce ANegativoFator */
            {
                ArrayList<Object> list = new28();
                push(goTo(13), list, false);
            }
            break;
            case 29: /* reduce ANumFator */
            {
                ArrayList<Object> list = new29();
                push(goTo(13), list, false);
            }
            break;
            case 30: /* reduce ARealFator */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list, false);
            }
            break;
            case 31: /* reduce AVariavelFator */
            {
                ArrayList<Object> list = new31();
                push(goTo(13), list, false);
            }
            break;
            case 32: /* reduce AMenorigParabool */
            {
                ArrayList<Object> list = new32();
                push(goTo(14), list, false);
            }
            break;
            case 33: /* reduce AMaiorigParabool */
            {
                ArrayList<Object> list = new33();
                push(goTo(14), list, false);
            }
            break;
            case 34: /* reduce AMenorParabool */
            {
                ArrayList<Object> list = new34();
                push(goTo(14), list, false);
            }
            break;
            case 35: /* reduce AMaiorParabool */
            {
                ArrayList<Object> list = new35();
                push(goTo(14), list, false);
            }
            break;
            case 36: /* reduce ALcomp */
            {
                ArrayList<Object> list = new36();
                push(goTo(15), list, false);
            }
            break;
            case 37: /* reduce ANaoLcomp */
            {
                ArrayList<Object> list = new37();
                push(goTo(15), list, false);
            }
            break;
            case 38: /* reduce ALsoma */
            {
                ArrayList<Object> list = new38();
                push(goTo(16), list, false);
            }
            break;
            case 39: /* reduce ALmult */
            {
                ArrayList<Object> list = new39();
                push(goTo(17), list, false);
            }
            break;
            case 40: /* reduce ALmeio */
            {
                ArrayList<Object> list = new40();
                push(goTo(18), list, false);
            }
            break;
            case 41: /* reduce AOutraexp */
            {
                ArrayList<Object> list = new41();
                push(goTo(19), list, false);
            }
            break;
            case 42: /* reduce AOutrolini */
            {
                ArrayList<Object> list = new42();
                push(goTo(20), list, false);
            }
            break;
            case 43: /* reduce AExpLogica */
            {
                ArrayList<Object> list = new43();
                push(goTo(21), list, false);
            }
            break;
            case 44: /* reduce AIgualLexp */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list, false);
            }
            break;
            case 45: /* reduce AIgualnumericoLexp */
            {
                ArrayList<Object> list = new45();
                push(goTo(22), list, false);
            }
            break;
            case 46: /* reduce ALexp */
            {
                ArrayList<Object> list = new46();
                push(goTo(22), list, false);
            }
            break;
            case 47: /* reduce AOuLini */
            {
                ArrayList<Object> list = new47();
                push(goTo(23), list, false);
            }
            break;
            case 48: /* reduce ALini */
            {
                ArrayList<Object> list = new48();
                push(goTo(23), list, false);
            }
            break;
            case 49: /* reduce AXorLmeiotermo */
            {
                ArrayList<Object> list = new49();
                push(goTo(24), list, false);
            }
            break;
            case 50: /* reduce ALmeiotermo */
            {
                ArrayList<Object> list = new50();
                push(goTo(24), list, false);
            }
            break;
            case 51: /* reduce AEnotLtermo */
            {
                ArrayList<Object> list = new51();
                push(goTo(25), list, false);
            }
            break;
            case 52: /* reduce ASimplesLtermo */
            {
                ArrayList<Object> list = new52();
                push(goTo(25), list, false);
            }
            break;
            case 53: /* reduce ALtermo */
            {
                ArrayList<Object> list = new53();
                push(goTo(25), list, false);
            }
            break;
            case 54: /* reduce ANegadoLtermo */
            {
                ArrayList<Object> list = new54();
                push(goTo(25), list, false);
            }
            break;
            case 55: /* reduce AParentesesLfator */
            {
                ArrayList<Object> list = new55();
                push(goTo(26), list, false);
            }
            break;
            case 56: /* reduce AExpLfator */
            {
                ArrayList<Object> list = new56();
                push(goTo(26), list, false);
            }
            break;
            case 57: /* reduce AComandoSe */
            {
                ArrayList<Object> list = new57();
                push(goTo(27), list, false);
            }
            break;
            case 58: /* reduce ASeNaoComandoSe */
            {
                ArrayList<Object> list = new58();
                push(goTo(27), list, false);
            }
            break;
            case 59: /* reduce AComandoSenao */
            {
                ArrayList<Object> list = new59();
                push(goTo(28), list, false);
            }
            break;
            case 60: /* reduce AVar */
            {
                ArrayList<Object> list = new60();
                push(goTo(29), list, false);
            }
            break;
            case 61: /* reduce AVetorVar */
            {
                ArrayList<Object> list = new61();
                push(goTo(29), list, false);
            }
            break;
            case 62: /* reduce ALeiaComandos */
            {
                ArrayList<Object> list = new62();
                push(goTo(30), list, false);
            }
            break;
            case 63: /* reduce ARepitaComandos */
            {
                ArrayList<Object> list = new63();
                push(goTo(30), list, false);
            }
            break;
            case 64: /* reduce AEnquantoComandos */
            {
                ArrayList<Object> list = new64();
                push(goTo(30), list, false);
            }
            break;
            case 65: /* reduce AAvaliarComandos */
            {
                ArrayList<Object> list = new65();
                push(goTo(30), list, false);
            }
            break;
            case 66: /* reduce AEscritaComandos */
            {
                ArrayList<Object> list = new66();
                push(goTo(30), list, false);
            }
            break;
            case 67: /* reduce ASeComandos */
            {
                ArrayList<Object> list = new67();
                push(goTo(30), list, false);
            }
            break;
            case 68: /* reduce AAtribuidaComandos */
            {
                ArrayList<Object> list = new68();
                push(goTo(30), list, false);
            }
            break;
            case 69: /* reduce AParaComandos */
            {
                ArrayList<Object> list = new69();
                push(goTo(30), list, false);
            }
            break;
            case 70: /* reduce ABaseComandos */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list, false);
            }
            break;
            case 71: /* reduce ALeiaComando */
            {
                ArrayList<Object> list = new71();
                push(goTo(31), list, false);
            }
            break;
            case 72: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new72();
                push(goTo(31), list, false);
            }
            break;
            case 73: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new73();
                push(goTo(31), list, false);
            }
            break;
            case 74: /* reduce AAvaliarComando */
            {
                ArrayList<Object> list = new74();
                push(goTo(31), list, false);
            }
            break;
            case 75: /* reduce AEscritaComando */
            {
                ArrayList<Object> list = new75();
                push(goTo(31), list, false);
            }
            break;
            case 76: /* reduce ASeComando */
            {
                ArrayList<Object> list = new76();
                push(goTo(31), list, false);
            }
            break;
            case 77: /* reduce AAtribuidaComando */
            {
                ArrayList<Object> list = new77();
                push(goTo(31), list, false);
            }
            break;
            case 78: /* reduce AParaComando */
            {
                ArrayList<Object> list = new78();
                push(goTo(31), list, false);
            }
            break;
            case 79: /* reduce AComandoRepita */
            {
                ArrayList<Object> list = new79();
                push(goTo(32), list, false);
            }
            break;
            case 80: /* reduce AComandoEnquanto */
            {
                ArrayList<Object> list = new80();
                push(goTo(33), list, false);
            }
            break;
            case 81: /* reduce ACasos */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list, false);
            }
            break;
            case 82: /* reduce AVazioCasos */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list, false);
            }
            break;
            case 83: /* reduce AAvsenao */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list, false);
            }
            break;
            case 84: /* reduce AVazioAvsenao */
            {
                ArrayList<Object> list = new84();
                push(goTo(35), list, false);
            }
            break;
            case 85: /* reduce AComandoAvalie */
            {
                ArrayList<Object> list = new85();
                push(goTo(36), list, false);
            }
            break;
            case 86: /* reduce AParatipos */
            {
                ArrayList<Object> list = new86();
                push(goTo(37), list, false);
            }
            break;
            case 87: /* reduce AVarParatipos */
            {
                ArrayList<Object> list = new87();
                push(goTo(37), list, false);
            }
            break;
            case 88: /* reduce AAparatipos */
            {
                ArrayList<Object> list = new88();
                push(goTo(38), list, false);
            }
            break;
            case 89: /* reduce ABparatipos */
            {
                ArrayList<Object> list = new89();
                push(goTo(39), list, false);
            }
            break;
            case 90: /* reduce AComandoPara */
            {
                ArrayList<Object> list = new90();
                push(goTo(40), list, false);
            }
            break;
            case 91: /* reduce APassoComandoPara */
            {
                ArrayList<Object> list = new91();
                push(goTo(40), list, false);
            }
            break;
            case 92: /* reduce AComandoEscrita */
            {
                ArrayList<Object> list = new92();
                push(goTo(41), list, false);
            }
            break;
            case 93: /* reduce AStrComandoEscrita */
            {
                ArrayList<Object> list = new93();
                push(goTo(41), list, false);
            }
            break;
            case 94: /* reduce AComandoLeia */
            {
                ArrayList<Object> list = new94();
                push(goTo(42), list, false);
            }
            break;
            case 95: /* reduce AComandoAtribuicao */
            {
                ArrayList<Object> list = new95();
                push(goTo(43), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce ATotal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTotal ptotalNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TPontovirgula tpontovirgulaNode4;
        TInicio tinicioNode5;
        PSuperDeclaracaoVariavel psuperdeclaracaovariavelNode6;
        PCorpoPrograma pcorpoprogramaNode7;
        TFimponto tfimpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);
        tinicioNode5 = (TInicio)nodeArrayList4.get(0);
        psuperdeclaracaovariavelNode6 = (PSuperDeclaracaoVariavel)nodeArrayList5.get(0);
        pcorpoprogramaNode7 = (PCorpoPrograma)nodeArrayList6.get(0);
        tfimpontoNode8 = (TFimponto)nodeArrayList7.get(0);

        ptotalNode1 = new ATotal(tprogramaNode2, tidentificadorNode3, tpontovirgulaNode4, tinicioNode5, psuperdeclaracaovariavelNode6, pcorpoprogramaNode7, tfimpontoNode8);
        }
	nodeList.add(ptotalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ASuperDeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSuperDeclaracaoVariavel psuperdeclaracaovariavelNode1;
        {
            // Block
        PSuperDeclaracaoVariavel psuperdeclaracaovariavelNode2;
        PDeclaracaoVariavel pdeclaracaovariavelNode3;
        psuperdeclaracaovariavelNode2 = (PSuperDeclaracaoVariavel)nodeArrayList1.get(0);
        pdeclaracaovariavelNode3 = (PDeclaracaoVariavel)nodeArrayList2.get(0);

        psuperdeclaracaovariavelNode1 = new ASuperDeclaracaoVariavel(psuperdeclaracaovariavelNode2, pdeclaracaovariavelNode3);
        }
	nodeList.add(psuperdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AVazioSuperDeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSuperDeclaracaoVariavel psuperdeclaracaovariavelNode1;
        {
            // Block

        psuperdeclaracaovariavelNode1 = new AVazioSuperDeclaracaoVariavel();
        }
	nodeList.add(psuperdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AConjuntoDeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavel pdeclaracaovariavelNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PDeclaracaoVariavelVirgula pdeclaracaovariavelvirgulaNode4;
        PVariaveld pvariaveldNode5;
        TPontovirgula tpontovirgulaNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pdeclaracaovariavelvirgulaNode4 = (PDeclaracaoVariavelVirgula)nodeArrayList3.get(0);
        pvariaveldNode5 = (PVariaveld)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontovirgula)nodeArrayList5.get(0);

        pdeclaracaovariavelNode1 = new AConjuntoDeclaracaoVariavel(ptipoNode2, tdoispontosNode3, pdeclaracaovariavelvirgulaNode4, pvariaveldNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADconstanteDeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavel pdeclaracaovariavelNode1;
        {
            // Block
        TConst tconstNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPontovirgula tpontovirgulaNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaovariavelNode1 = new ADconstanteDeclaracaoVariavel(tconstNode2, tidentificadorNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavel pdeclaracaovariavelNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoispontos tdoispontosNode3;
        PVariaveld pvariaveldNode4;
        TPontovirgula tpontovirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pvariaveldNode4 = (PVariaveld)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontovirgula)nodeArrayList4.get(0);

        pdeclaracaovariavelNode1 = new ADeclaracaoVariavel(ptipoNode2, tdoispontosNode3, pvariaveldNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AEncadeamentoDeclaracaoVariavelVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavelVirgula pdeclaracaovariavelvirgulaNode1;
        {
            // Block
        PDeclaracaoVariavelVirgula pdeclaracaovariavelvirgulaNode2;
        PVariaveld pvariaveldNode3;
        TVirgula tvirgulaNode4;
        pdeclaracaovariavelvirgulaNode2 = (PDeclaracaoVariavelVirgula)nodeArrayList1.get(0);
        pvariaveldNode3 = (PVariaveld)nodeArrayList2.get(0);
        tvirgulaNode4 = (TVirgula)nodeArrayList3.get(0);

        pdeclaracaovariavelvirgulaNode1 = new AEncadeamentoDeclaracaoVariavelVirgula(pdeclaracaovariavelvirgulaNode2, pvariaveldNode3, tvirgulaNode4);
        }
	nodeList.add(pdeclaracaovariavelvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADeclaracaoVariavelVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoVariavelVirgula pdeclaracaovariavelvirgulaNode1;
        {
            // Block
        PVariaveld pvariaveldNode2;
        TVirgula tvirgulaNode3;
        pvariaveldNode2 = (PVariaveld)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pdeclaracaovariavelvirgulaNode1 = new ADeclaracaoVariavelVirgula(pvariaveldNode2, tvirgulaNode3);
        }
	nodeList.add(pdeclaracaovariavelvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AVariaveld */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariaveld pvariaveldNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvariaveldNode1 = new AVariaveld(tidentificadorNode2);
        }
	nodeList.add(pvariaveldNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVetorVariaveld */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariaveld pvariaveldNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbrecolchete tabrecolcheteNode3;
        TNumero tnumeroNode4;
        TFecharcolchete tfecharcolcheteNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbrecolchete)nodeArrayList2.get(0);
        tnumeroNode4 = (TNumero)nodeArrayList3.get(0);
        tfecharcolcheteNode5 = (TFecharcolchete)nodeArrayList4.get(0);

        pvariaveldNode1 = new AVetorVariaveld(tidentificadorNode2, tabrecolcheteNode3, tnumeroNode4, tfecharcolcheteNode5);
        }
	nodeList.add(pvariaveldNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ACorpoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCorpoPrograma pcorpoprogramaNode1;
        {
            // Block
        PComandos pcomandosNode2;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);

        pcorpoprogramaNode1 = new ACorpoPrograma(pcomandosNode2);
        }
	nodeList.add(pcorpoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ACTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AITipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AITipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ATipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AStrValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStrValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ANumValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pvalorNode1 = new ANumValor(tnumeroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pvalorNode1 = new AValor(tnumerorealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpnum pexpnumNode2;
        pexpnumNode2 = (PExpnum)nodeArrayList1.get(0);

        pexprNode1 = new AExpr(pexpnumNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ALogicaExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexprNode1 = new ALogicaExpr(pexplogicaNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AExpnum */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpnum pexpnumNode1;
        {
            // Block
        PExpnum pexpnumNode2;
        PSoma psomaNode3;
        PTermo ptermoNode4;
        pexpnumNode2 = (PExpnum)nodeArrayList1.get(0);
        psomaNode3 = (PSoma)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpnumNode1 = new AExpnum(pexpnumNode2, psomaNode3, ptermoNode4);
        }
	nodeList.add(pexpnumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ATermExpnum */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpnum pexpnumNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpnumNode1 = new ATermExpnum(ptermoNode2);
        }
	nodeList.add(pexpnumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ASoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TAdicao tadicaoNode2;
        tadicaoNode2 = (TAdicao)nodeArrayList1.get(0);

        psomaNode1 = new ASoma(tadicaoNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ASubSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);

        psomaNode1 = new ASubSoma(tsubtracaoNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ATermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PMult pmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pmultNode3 = (PMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ATermo(ptermoNode2, pmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AFatTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        pmultNode1 = new AMult(tmultiplicacaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ADivMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TDivisao tdivisaoNode2;
        tdivisaoNode2 = (TDivisao)nodeArrayList1.get(0);

        pmultNode1 = new ADivMult(tdivisaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreparenteses tabreparentesesNode2;
        PExpnum pexpnumNode3;
        TFechaparenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreparenteses)nodeArrayList1.get(0);
        pexpnumNode3 = (PExpnum)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaparenteses)nodeArrayList3.get(0);

        pfatorNode1 = new AFator(tabreparentesesNode2, pexpnumNode3, tfechaparentesesNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ANegativoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        PFator pfatorNode3;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);

        pfatorNode1 = new ANegativoFator(tsubtracaoNode2, pfatorNode3);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ANumFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pfatorNode1 = new ANumFator(tnumeroNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ARealFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pfatorNode1 = new ARealFator(tnumerorealNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AVariavelFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfatorNode1 = new AVariavelFator(pvarNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AMenorigParabool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParabool pparaboolNode1;
        {
            // Block
        TMenorigual tmenorigualNode2;
        tmenorigualNode2 = (TMenorigual)nodeArrayList1.get(0);

        pparaboolNode1 = new AMenorigParabool(tmenorigualNode2);
        }
	nodeList.add(pparaboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AMaiorigParabool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParabool pparaboolNode1;
        {
            // Block
        TMaiorigual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorigual)nodeArrayList1.get(0);

        pparaboolNode1 = new AMaiorigParabool(tmaiorigualNode2);
        }
	nodeList.add(pparaboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AMenorParabool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParabool pparaboolNode1;
        {
            // Block
        TMenorque tmenorqueNode2;
        tmenorqueNode2 = (TMenorque)nodeArrayList1.get(0);

        pparaboolNode1 = new AMenorParabool(tmenorqueNode2);
        }
	nodeList.add(pparaboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AMaiorParabool */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParabool pparaboolNode1;
        {
            // Block
        TMaiorque tmaiorqueNode2;
        tmaiorqueNode2 = (TMaiorque)nodeArrayList1.get(0);

        pparaboolNode1 = new AMaiorParabool(tmaiorqueNode2);
        }
	nodeList.add(pparaboolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ALcomp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLcomp plcompNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        plcompNode1 = new ALcomp(tigualNode2);
        }
	nodeList.add(plcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ANaoLcomp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLcomp plcompNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        plcompNode1 = new ANaoLcomp(tdiferenteNode2);
        }
	nodeList.add(plcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ALsoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLsoma plsomaNode1;
        {
            // Block
        TOu touNode2;
        touNode2 = (TOu)nodeArrayList1.get(0);

        plsomaNode1 = new ALsoma(touNode2);
        }
	nodeList.add(plsomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ALmult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLmult plmultNode1;
        {
            // Block
        TE teNode2;
        teNode2 = (TE)nodeArrayList1.get(0);

        plmultNode1 = new ALmult(teNode2);
        }
	nodeList.add(plmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ALmeio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLmeio plmeioNode1;
        {
            // Block
        TXor txorNode2;
        txorNode2 = (TXor)nodeArrayList1.get(0);

        plmeioNode1 = new ALmeio(txorNode2);
        }
	nodeList.add(plmeioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AOutraexp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POutraexp poutraexpNode1;
        {
            // Block
        PExpnum pexpnumNode2;
        pexpnumNode2 = (PExpnum)nodeArrayList1.get(0);

        poutraexpNode1 = new AOutraexp(pexpnumNode2);
        }
	nodeList.add(poutraexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AOutrolini */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POutrolini poutroliniNode1;
        {
            // Block
        PLini pliniNode2;
        pliniNode2 = (PLini)nodeArrayList1.get(0);

        poutroliniNode1 = new AOutrolini(pliniNode2);
        }
	nodeList.add(poutroliniNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PLexp plexpNode2;
        plexpNode2 = (PLexp)nodeArrayList1.get(0);

        pexplogicaNode1 = new AExpLogica(plexpNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AIgualLexp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLexp plexpNode1;
        {
            // Block
        PLini pliniNode2;
        PLcomp plcompNode3;
        POutrolini poutroliniNode4;
        pliniNode2 = (PLini)nodeArrayList1.get(0);
        plcompNode3 = (PLcomp)nodeArrayList2.get(0);
        poutroliniNode4 = (POutrolini)nodeArrayList3.get(0);

        plexpNode1 = new AIgualLexp(pliniNode2, plcompNode3, poutroliniNode4);
        }
	nodeList.add(plexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AIgualnumericoLexp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLexp plexpNode1;
        {
            // Block
        PExpnum pexpnumNode2;
        PLcomp plcompNode3;
        POutraexp poutraexpNode4;
        pexpnumNode2 = (PExpnum)nodeArrayList1.get(0);
        plcompNode3 = (PLcomp)nodeArrayList2.get(0);
        poutraexpNode4 = (POutraexp)nodeArrayList3.get(0);

        plexpNode1 = new AIgualnumericoLexp(pexpnumNode2, plcompNode3, poutraexpNode4);
        }
	nodeList.add(plexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ALexp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLexp plexpNode1;
        {
            // Block
        PLini pliniNode2;
        pliniNode2 = (PLini)nodeArrayList1.get(0);

        plexpNode1 = new ALexp(pliniNode2);
        }
	nodeList.add(plexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AOuLini */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLini pliniNode1;
        {
            // Block
        PLini pliniNode2;
        PLsoma plsomaNode3;
        PLmeiotermo plmeiotermoNode4;
        pliniNode2 = (PLini)nodeArrayList1.get(0);
        plsomaNode3 = (PLsoma)nodeArrayList2.get(0);
        plmeiotermoNode4 = (PLmeiotermo)nodeArrayList3.get(0);

        pliniNode1 = new AOuLini(pliniNode2, plsomaNode3, plmeiotermoNode4);
        }
	nodeList.add(pliniNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ALini */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLini pliniNode1;
        {
            // Block
        PLmeiotermo plmeiotermoNode2;
        plmeiotermoNode2 = (PLmeiotermo)nodeArrayList1.get(0);

        pliniNode1 = new ALini(plmeiotermoNode2);
        }
	nodeList.add(pliniNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AXorLmeiotermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLmeiotermo plmeiotermoNode1;
        {
            // Block
        PLmeiotermo plmeiotermoNode2;
        PLmeio plmeioNode3;
        PLtermo pltermoNode4;
        plmeiotermoNode2 = (PLmeiotermo)nodeArrayList1.get(0);
        plmeioNode3 = (PLmeio)nodeArrayList2.get(0);
        pltermoNode4 = (PLtermo)nodeArrayList3.get(0);

        plmeiotermoNode1 = new AXorLmeiotermo(plmeiotermoNode2, plmeioNode3, pltermoNode4);
        }
	nodeList.add(plmeiotermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ALmeiotermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLmeiotermo plmeiotermoNode1;
        {
            // Block
        PLtermo pltermoNode2;
        pltermoNode2 = (PLtermo)nodeArrayList1.get(0);

        plmeiotermoNode1 = new ALmeiotermo(pltermoNode2);
        }
	nodeList.add(plmeiotermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AEnotLtermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLtermo pltermoNode1;
        {
            // Block
        PLtermo pltermoNode2;
        PLmult plmultNode3;
        PLfator plfatorNode4;
        pltermoNode2 = (PLtermo)nodeArrayList1.get(0);
        plmultNode3 = (PLmult)nodeArrayList2.get(0);
        plfatorNode4 = (PLfator)nodeArrayList3.get(0);

        pltermoNode1 = new AEnotLtermo(pltermoNode2, plmultNode3, plfatorNode4);
        }
	nodeList.add(pltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ASimplesLtermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLtermo pltermoNode1;
        {
            // Block
        PLfator plfatorNode2;
        plfatorNode2 = (PLfator)nodeArrayList1.get(0);

        pltermoNode1 = new ASimplesLtermo(plfatorNode2);
        }
	nodeList.add(pltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ALtermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLtermo pltermoNode1;
        {
            // Block
        PLtermo pltermoNode2;
        PLmult plmultNode3;
        TNao tnaoNode4;
        PLfator plfatorNode5;
        pltermoNode2 = (PLtermo)nodeArrayList1.get(0);
        plmultNode3 = (PLmult)nodeArrayList2.get(0);
        tnaoNode4 = (TNao)nodeArrayList3.get(0);
        plfatorNode5 = (PLfator)nodeArrayList4.get(0);

        pltermoNode1 = new ALtermo(pltermoNode2, plmultNode3, tnaoNode4, plfatorNode5);
        }
	nodeList.add(pltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ANegadoLtermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLtermo pltermoNode1;
        {
            // Block
        TNao tnaoNode2;
        PLfator plfatorNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        plfatorNode3 = (PLfator)nodeArrayList2.get(0);

        pltermoNode1 = new ANegadoLtermo(tnaoNode2, plfatorNode3);
        }
	nodeList.add(pltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AParentesesLfator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLfator plfatorNode1;
        {
            // Block
        TAbreparenteses tabreparentesesNode2;
        PLexp plexpNode3;
        TFechaparenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreparenteses)nodeArrayList1.get(0);
        plexpNode3 = (PLexp)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaparenteses)nodeArrayList3.get(0);

        plfatorNode1 = new AParentesesLfator(tabreparentesesNode2, plexpNode3, tfechaparentesesNode4);
        }
	nodeList.add(plfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExpLfator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLfator plfatorNode1;
        {
            // Block
        PExpnum pexpnumNode2;
        PParabool pparaboolNode3;
        POutraexp poutraexpNode4;
        pexpnumNode2 = (PExpnum)nodeArrayList1.get(0);
        pparaboolNode3 = (PParabool)nodeArrayList2.get(0);
        poutraexpNode4 = (POutraexp)nodeArrayList3.get(0);

        plfatorNode1 = new AExpLfator(pexpnumNode2, pparaboolNode3, poutraexpNode4);
        }
	nodeList.add(plfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpLogica pexplogicaNode4;
        TFechaparenteses tfechaparentesesNode5;
        TEntao tentaoNode6;
        PComandos pcomandosNode7;
        TFimse tfimseNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        tfimseNode8 = (TFimse)nodeArrayList7.get(0);

        pcomandoseNode1 = new AComandoSe(tseNode2, tabreparentesesNode3, pexplogicaNode4, tfechaparentesesNode5, tentaoNode6, pcomandosNode7, tfimseNode8);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ASeNaoComandoSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSe pcomandoseNode1;
        {
            // Block
        TSe tseNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpLogica pexplogicaNode4;
        TFechaparenteses tfechaparentesesNode5;
        TEntao tentaoNode6;
        PComandos pcomandosNode7;
        PComandoSenao pcomandosenaoNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        pcomandosenaoNode8 = (PComandoSenao)nodeArrayList7.get(0);

        pcomandoseNode1 = new ASeNaoComandoSe(tseNode2, tabreparentesesNode3, pexplogicaNode4, tfechaparentesesNode5, tentaoNode6, pcomandosNode7, pcomandosenaoNode8);
        }
	nodeList.add(pcomandoseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AComandoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSenao pcomandosenaoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComandos pcomandosNode3;
        TFimse tfimseNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);
        tfimseNode4 = (TFimse)nodeArrayList3.get(0);

        pcomandosenaoNode1 = new AComandoSenao(tsenaoNode2, pcomandosNode3, tfimseNode4);
        }
	nodeList.add(pcomandosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvarNode1 = new AVar(tidentificadorNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AVetorVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbrecolchete tabrecolcheteNode3;
        PExpnum pexpnumNode4;
        TFecharcolchete tfecharcolcheteNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbrecolchete)nodeArrayList2.get(0);
        pexpnumNode4 = (PExpnum)nodeArrayList3.get(0);
        tfecharcolcheteNode5 = (TFecharcolchete)nodeArrayList4.get(0);

        pvarNode1 = new AVetorVar(tidentificadorNode2, tabrecolcheteNode3, pexpnumNode4, tfecharcolcheteNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ALeiaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoLeia pcomandoleiaNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoleiaNode3 = (PComandoLeia)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new ALeiaComandos(pcomandosNode2, pcomandoleiaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ARepitaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoRepita pcomandorepitaNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandorepitaNode3 = (PComandoRepita)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new ARepitaComandos(pcomandosNode2, pcomandorepitaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AEnquantoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoEnquanto pcomandoenquantoNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoenquantoNode3 = (PComandoEnquanto)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new AEnquantoComandos(pcomandosNode2, pcomandoenquantoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AAvaliarComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoAvalie pcomandoavalieNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoavalieNode3 = (PComandoAvalie)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new AAvaliarComandos(pcomandosNode2, pcomandoavalieNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AEscritaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoEscrita pcomandoescritaNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoescritaNode3 = (PComandoEscrita)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new AEscritaComandos(pcomandosNode2, pcomandoescritaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ASeComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoSe pcomandoseNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoseNode3 = (PComandoSe)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new ASeComandos(pcomandosNode2, pcomandoseNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AAtribuidaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoAtribuicao pcomandoatribuicaoNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoatribuicaoNode3 = (PComandoAtribuicao)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new AAtribuidaComandos(pcomandosNode2, pcomandoatribuicaoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AParaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComandos pcomandosNode2;
        PComandoPara pcomandoparaNode3;
        TPontovirgula tpontovirgulaNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        pcomandoparaNode3 = (PComandoPara)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontovirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new AParaComandos(pcomandosNode2, pcomandoparaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ABaseComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pcomandosNode1 = new ABaseComandos(pcomandoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ALeiaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoLeia pcomandoleiaNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoleiaNode2 = (PComandoLeia)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new ALeiaComando(pcomandoleiaNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoRepita pcomandorepitaNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandorepitaNode2 = (PComandoRepita)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new ARepitaComando(pcomandorepitaNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoEnquanto pcomandoenquantoNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoenquantoNode2 = (PComandoEnquanto)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AEnquantoComando(pcomandoenquantoNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AAvaliarComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoAvalie pcomandoavalieNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoavalieNode2 = (PComandoAvalie)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AAvaliarComando(pcomandoavalieNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AEscritaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoEscrita pcomandoescritaNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoescritaNode2 = (PComandoEscrita)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AEscritaComando(pcomandoescritaNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSe pcomandoseNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoseNode2 = (PComandoSe)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new ASeComando(pcomandoseNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AAtribuidaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoAtribuicao pcomandoatribuicaoNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoatribuicaoNode2 = (PComandoAtribuicao)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AAtribuidaComando(pcomandoatribuicaoNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoPara pcomandoparaNode2;
        TPontovirgula tpontovirgulaNode3;
        pcomandoparaNode2 = (PComandoPara)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontovirgula)nodeArrayList2.get(0);

        pcomandoNode1 = new AParaComando(pcomandoparaNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AComandoRepita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoRepita pcomandorepitaNode1;
        {
            // Block
        TRepita trepitaNode2;
        PComandos pcomandosNode3;
        TAte tateNode4;
        TAbreparenteses tabreparentesesNode5;
        PExpLogica pexplogicaNode6;
        TFechaparenteses tfechaparentesesNode7;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        tabreparentesesNode5 = (TAbreparenteses)nodeArrayList4.get(0);
        pexplogicaNode6 = (PExpLogica)nodeArrayList5.get(0);
        tfechaparentesesNode7 = (TFechaparenteses)nodeArrayList6.get(0);

        pcomandorepitaNode1 = new AComandoRepita(trepitaNode2, pcomandosNode3, tateNode4, tabreparentesesNode5, pexplogicaNode6, tfechaparentesesNode7);
        }
	nodeList.add(pcomandorepitaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AComandoEnquanto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEnquanto pcomandoenquantoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpLogica pexplogicaNode4;
        TFechaparenteses tfechaparentesesNode5;
        TFaca tfacaNode6;
        PComandos pcomandosNode7;
        TFimenquanto tfimenquantoNode8;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimenquanto)nodeArrayList7.get(0);

        pcomandoenquantoNode1 = new AComandoEnquanto(tenquantoNode2, tabreparentesesNode3, pexplogicaNode4, tfechaparentesesNode5, tfacaNode6, pcomandosNode7, tfimenquantoNode8);
        }
	nodeList.add(pcomandoenquantoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ACasos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasos pcasosNode1;
        {
            // Block
        PCasos pcasosNode2;
        TCaso tcasoNode3;
        PValor pvalorNode4;
        TDoispontos tdoispontosNode5;
        PComandos pcomandosNode6;
        pcasosNode2 = (PCasos)nodeArrayList1.get(0);
        tcasoNode3 = (TCaso)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoispontos)nodeArrayList4.get(0);
        pcomandosNode6 = (PComandos)nodeArrayList5.get(0);

        pcasosNode1 = new ACasos(pcasosNode2, tcasoNode3, pvalorNode4, tdoispontosNode5, pcomandosNode6);
        }
	nodeList.add(pcasosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AVazioCasos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PCasos pcasosNode1;
        {
            // Block

        pcasosNode1 = new AVazioCasos();
        }
	nodeList.add(pcasosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AAvsenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvsenao pavsenaoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoispontos tdoispontosNode3;
        PComandos pcomandosNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoispontos)nodeArrayList2.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList3.get(0);

        pavsenaoNode1 = new AAvsenao(tsenaoNode2, tdoispontosNode3, pcomandosNode4);
        }
	nodeList.add(pavsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AVazioAvsenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAvsenao pavsenaoNode1;
        {
            // Block

        pavsenaoNode1 = new AVazioAvsenao();
        }
	nodeList.add(pavsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AComandoAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAvalie pcomandoavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpr pexprNode4;
        TFechaparenteses tfechaparentesesNode5;
        TCaso tcasoNode6;
        PValor pvalorNode7;
        TDoispontos tdoispontosNode8;
        PComandos pcomandosNode9;
        PCasos pcasosNode10;
        PAvsenao pavsenaoNode11;
        TFimavalie tfimavalieNode12;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);
        tcasoNode6 = (TCaso)nodeArrayList5.get(0);
        pvalorNode7 = (PValor)nodeArrayList6.get(0);
        tdoispontosNode8 = (TDoispontos)nodeArrayList7.get(0);
        pcomandosNode9 = (PComandos)nodeArrayList8.get(0);
        pcasosNode10 = (PCasos)nodeArrayList9.get(0);
        pavsenaoNode11 = (PAvsenao)nodeArrayList10.get(0);
        tfimavalieNode12 = (TFimavalie)nodeArrayList11.get(0);

        pcomandoavalieNode1 = new AComandoAvalie(tavalieNode2, tabreparentesesNode3, pexprNode4, tfechaparentesesNode5, tcasoNode6, pvalorNode7, tdoispontosNode8, pcomandosNode9, pcasosNode10, pavsenaoNode11, tfimavalieNode12);
        }
	nodeList.add(pcomandoavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AParatipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParatipos pparatiposNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pparatiposNode1 = new AParatipos(tnumeroNode2);
        }
	nodeList.add(pparatiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AVarParatipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParatipos pparatiposNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pparatiposNode1 = new AVarParatipos(pvarNode2);
        }
	nodeList.add(pparatiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AAparatipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAparatipos paparatiposNode1;
        {
            // Block
        PParatipos pparatiposNode2;
        pparatiposNode2 = (PParatipos)nodeArrayList1.get(0);

        paparatiposNode1 = new AAparatipos(pparatiposNode2);
        }
	nodeList.add(paparatiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ABparatipos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBparatipos pbparatiposNode1;
        {
            // Block
        PParatipos pparatiposNode2;
        pparatiposNode2 = (PParatipos)nodeArrayList1.get(0);

        pbparatiposNode1 = new ABparatipos(pparatiposNode2);
        }
	nodeList.add(pbparatiposNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AComandoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPara pcomandoparaNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        PParatipos pparatiposNode5;
        TAte tateNode6;
        PAparatipos paparatiposNode7;
        TFaca tfacaNode8;
        PComandos pcomandosNode9;
        TFimpara tfimparaNode10;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        pparatiposNode5 = (PParatipos)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        paparatiposNode7 = (PAparatipos)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pcomandosNode9 = (PComandos)nodeArrayList8.get(0);
        tfimparaNode10 = (TFimpara)nodeArrayList9.get(0);

        pcomandoparaNode1 = new AComandoPara(tparaNode2, pvarNode3, tdeNode4, pparatiposNode5, tateNode6, paparatiposNode7, tfacaNode8, pcomandosNode9, tfimparaNode10);
        }
	nodeList.add(pcomandoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce APassoComandoPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPara pcomandoparaNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        PParatipos pparatiposNode5;
        TPasso tpassoNode6;
        PAparatipos paparatiposNode7;
        TAte tateNode8;
        PBparatipos pbparatiposNode9;
        TFaca tfacaNode10;
        PComandos pcomandosNode11;
        TFimpara tfimparaNode12;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        pparatiposNode5 = (PParatipos)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        paparatiposNode7 = (PAparatipos)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        pbparatiposNode9 = (PBparatipos)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        pcomandosNode11 = (PComandos)nodeArrayList10.get(0);
        tfimparaNode12 = (TFimpara)nodeArrayList11.get(0);

        pcomandoparaNode1 = new APassoComandoPara(tparaNode2, pvarNode3, tdeNode4, pparatiposNode5, tpassoNode6, paparatiposNode7, tateNode8, pbparatiposNode9, tfacaNode10, pcomandosNode11, tfimparaNode12);
        }
	nodeList.add(pcomandoparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AComandoEscrita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscrita pcomandoescritaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreparenteses tabreparentesesNode3;
        PExpr pexprNode4;
        TFechaparenteses tfechaparentesesNode5;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);

        pcomandoescritaNode1 = new AComandoEscrita(tescrevaNode2, tabreparentesesNode3, pexprNode4, tfechaparentesesNode5);
        }
	nodeList.add(pcomandoescritaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AStrComandoEscrita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoEscrita pcomandoescritaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreparenteses tabreparentesesNode3;
        TString tstringNode4;
        TFechaparenteses tfechaparentesesNode5;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        tstringNode4 = (TString)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);

        pcomandoescritaNode1 = new AStrComandoEscrita(tescrevaNode2, tabreparentesesNode3, tstringNode4, tfechaparentesesNode5);
        }
	nodeList.add(pcomandoescritaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AComandoLeia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoLeia pcomandoleiaNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreparenteses tabreparentesesNode3;
        PVar pvarNode4;
        TFechaparenteses tfechaparentesesNode5;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreparenteses)nodeArrayList2.get(0);
        pvarNode4 = (PVar)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaparenteses)nodeArrayList4.get(0);

        pcomandoleiaNode1 = new AComandoLeia(tleiaNode2, tabreparentesesNode3, pvarNode4, tfechaparentesesNode5);
        }
	nodeList.add(pcomandoleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AComandoAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAtribuicao pcomandoatribuicaoNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExpnum pexpnumNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpnumNode4 = (PExpnum)nodeArrayList3.get(0);

        pcomandoatribuicaoNode1 = new AComandoAtribuicao(pvarNode2, tatribuicaoNode3, pexpnumNode4);
        }
	nodeList.add(pcomandoatribuicaoNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {18, SHIFT, 1}, },
			{{-1, ERROR, 1}, {52, SHIFT, 3}, },
			{{-1, ERROR, 2}, {57, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {8, SHIFT, 4}, },
			{{-1, ERROR, 4}, {19, SHIFT, 5}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 6}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {17, SHIFT, 10}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 10}, {52, SHIFT, 33}, },
			{{-1, ERROR, 11}, {48, SHIFT, 34}, },
			{{-1, ERROR, 12}, {48, SHIFT, 35}, },
			{{-1, ERROR, 13}, {48, SHIFT, 36}, },
			{{-1, ERROR, 14}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 15}, {48, SHIFT, 38}, },
			{{-1, ERROR, 16}, {52, SHIFT, 18}, },
			{{-1, ERROR, 17}, {48, SHIFT, 40}, },
			{{-1, REDUCE, 60}, {41, SHIFT, 41}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 20}, {20, SHIFT, 42}, },
			{{-1, ERROR, 21}, {9, SHIFT, 43}, },
			{{-1, ERROR, 22}, {8, SHIFT, 44}, },
			{{-1, ERROR, 23}, {16, SHIFT, 45}, },
			{{-1, REDUCE, 10}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 26}, {8, SHIFT, 54}, },
			{{-1, ERROR, 27}, {8, SHIFT, 55}, },
			{{-1, ERROR, 28}, {8, SHIFT, 56}, },
			{{-1, ERROR, 29}, {8, SHIFT, 57}, },
			{{-1, ERROR, 30}, {8, SHIFT, 58}, },
			{{-1, ERROR, 31}, {8, SHIFT, 59}, },
			{{-1, ERROR, 32}, {8, SHIFT, 60}, },
			{{-1, ERROR, 33}, {7, SHIFT, 61}, {50, SHIFT, 62}, {51, SHIFT, 63}, },
			{{-1, ERROR, 34}, {1, SHIFT, 65}, {7, SHIFT, 66}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 35}, {52, SHIFT, 18}, },
			{{-1, ERROR, 36}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 37}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {34, SHIFT, 85}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 38}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 39}, {33, SHIFT, 87}, },
			{{-1, ERROR, 40}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 41}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 43}, {52, SHIFT, 91}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 45}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 46}, {8, SHIFT, 95}, },
			{{-1, ERROR, 47}, {8, SHIFT, 96}, },
			{{-1, ERROR, 48}, {8, SHIFT, 97}, },
			{{-1, ERROR, 49}, {8, SHIFT, 98}, },
			{{-1, ERROR, 50}, {8, SHIFT, 99}, },
			{{-1, ERROR, 51}, {8, SHIFT, 100}, },
			{{-1, ERROR, 52}, {8, SHIFT, 101}, },
			{{-1, ERROR, 53}, {8, SHIFT, 102}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 64}, {8, SHIFT, 103}, },
			{{-1, ERROR, 65}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 66}, {49, SHIFT, 105}, },
			{{-1, ERROR, 67}, {1, SHIFT, 65}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 68}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 71}, {49, SHIFT, 110}, },
			{{-1, REDUCE, 17}, {0, SHIFT, 111}, {1, SHIFT, 112}, {10, SHIFT, 113}, {11, SHIFT, 114}, {12, SHIFT, 115}, {13, SHIFT, 116}, {14, SHIFT, 117}, {15, SHIFT, 118}, },
			{{-1, REDUCE, 20}, {2, SHIFT, 122}, {3, SHIFT, 123}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 46}, {12, SHIFT, 115}, {15, SHIFT, 118}, {44, SHIFT, 125}, },
			{{-1, REDUCE, 48}, {45, SHIFT, 128}, },
			{{-1, REDUCE, 50}, {43, SHIFT, 130}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 82}, {49, SHIFT, 132}, },
			{{-1, ERROR, 83}, {0, SHIFT, 111}, {1, SHIFT, 112}, {10, SHIFT, 113}, {11, SHIFT, 114}, {12, SHIFT, 115}, {13, SHIFT, 116}, {14, SHIFT, 117}, {15, SHIFT, 118}, },
			{{-1, ERROR, 84}, {49, SHIFT, 133}, },
			{{-1, ERROR, 85}, {48, SHIFT, 134}, },
			{{-1, ERROR, 86}, {49, SHIFT, 135}, },
			{{-1, ERROR, 87}, {50, SHIFT, 136}, {52, SHIFT, 18}, },
			{{-1, ERROR, 88}, {49, SHIFT, 139}, },
			{{-1, ERROR, 89}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 90}, {0, SHIFT, 111}, {1, SHIFT, 112}, {42, SHIFT, 141}, },
			{{-1, REDUCE, 8}, {41, SHIFT, 142}, },
			{{-1, ERROR, 92}, {52, SHIFT, 91}, },
			{{-1, ERROR, 93}, {8, SHIFT, 144}, {47, SHIFT, 145}, },
			{{-1, REDUCE, 95}, {0, SHIFT, 111}, {1, SHIFT, 112}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 106}, {0, SHIFT, 111}, {1, SHIFT, 112}, {10, SHIFT, 113}, {11, SHIFT, 114}, {13, SHIFT, 116}, {14, SHIFT, 117}, },
			{{-1, REDUCE, 54}, },
			{{-1, ERROR, 108}, {0, SHIFT, 111}, {1, SHIFT, 112}, {10, SHIFT, 113}, {11, SHIFT, 114}, {12, SHIFT, 115}, {13, SHIFT, 116}, {14, SHIFT, 117}, {15, SHIFT, 118}, {49, SHIFT, 146}, },
			{{-1, ERROR, 109}, {49, SHIFT, 147}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 119}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 120}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 121}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 124}, {1, SHIFT, 65}, {48, SHIFT, 89}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 126}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 127}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 129}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 131}, {1, SHIFT, 65}, {46, SHIFT, 157}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 133}, {25, SHIFT, 159}, },
			{{-1, ERROR, 134}, {1, SHIFT, 65}, {46, SHIFT, 67}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, ERROR, 135}, {35, SHIFT, 161}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 138}, {34, SHIFT, 162}, {37, SHIFT, 163}, },
			{{-1, ERROR, 139}, {39, SHIFT, 164}, },
			{{-1, ERROR, 140}, {0, SHIFT, 111}, {1, SHIFT, 112}, {49, SHIFT, 146}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 142}, {50, SHIFT, 165}, },
			{{-1, ERROR, 143}, {8, SHIFT, 166}, {47, SHIFT, 167}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 19}, {2, SHIFT, 122}, {3, SHIFT, 123}, },
			{{-1, REDUCE, 41}, {0, SHIFT, 111}, {1, SHIFT, 112}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 42}, {44, SHIFT, 125}, },
			{{-1, REDUCE, 47}, {45, SHIFT, 128}, },
			{{-1, REDUCE, 49}, {43, SHIFT, 130}, },
			{{-1, ERROR, 157}, {1, SHIFT, 65}, {48, SHIFT, 68}, {50, SHIFT, 69}, {51, SHIFT, 70}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 159}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 160}, {49, SHIFT, 170}, },
			{{-1, ERROR, 161}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 162}, {50, SHIFT, 136}, {52, SHIFT, 18}, },
			{{-1, ERROR, 163}, {50, SHIFT, 136}, {52, SHIFT, 18}, },
			{{-1, ERROR, 164}, {7, SHIFT, 61}, {50, SHIFT, 62}, {51, SHIFT, 63}, },
			{{-1, ERROR, 165}, {42, SHIFT, 176}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 169}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {26, SHIFT, 177}, {27, SHIFT, 178}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 171}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {31, SHIFT, 180}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 173}, {35, SHIFT, 181}, },
			{{-1, ERROR, 174}, {34, SHIFT, 182}, },
			{{-1, ERROR, 175}, {9, SHIFT, 183}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 177}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 181}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 182}, {50, SHIFT, 136}, {52, SHIFT, 18}, },
			{{-1, ERROR, 183}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 184}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {27, SHIFT, 189}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 185}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {36, SHIFT, 190}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 187}, {35, SHIFT, 191}, },
			{{-1, REDUCE, 82}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 191}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 84}, {26, SHIFT, 194}, {39, SHIFT, 195}, },
			{{-1, ERROR, 193}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {36, SHIFT, 197}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 194}, {9, SHIFT, 198}, },
			{{-1, ERROR, 195}, {7, SHIFT, 61}, {50, SHIFT, 62}, {51, SHIFT, 63}, },
			{{-1, ERROR, 196}, {40, SHIFT, 200}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 198}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 199}, {9, SHIFT, 202}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 83}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, ERROR, 202}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
			{{-1, REDUCE, 81}, {22, SHIFT, 11}, {23, SHIFT, 12}, {24, SHIFT, 13}, {29, SHIFT, 14}, {30, SHIFT, 15}, {32, SHIFT, 16}, {38, SHIFT, 17}, {52, SHIFT, 18}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 6}, },
			{{-1, 19}, },
			{{-1, 92}, },
			{{-1, 93}, {92, 143}, },
			{{-1, 20}, },
			{{-1, 21}, },
			{{-1, 64}, {164, 175}, {195, 199}, },
			{{-1, 71}, {40, 88}, },
			{{-1, 106}, {34, 72}, {36, 83}, {38, 83}, {40, 72}, {41, 90}, {45, 94}, {68, 108}, {89, 140}, {120, 149}, {121, 149}, {134, 83}, },
			{{-1, 119}, },
			{{-1, 73}, {119, 148}, },
			{{-1, 124}, },
			{{-1, 74}, {65, 104}, {124, 152}, },
			{{-1, 120}, },
			{{-1, 121}, {77, 126}, },
			{{-1, 127}, },
			{{-1, 131}, },
			{{-1, 129}, },
			{{-1, 150}, {121, 151}, },
			{{-1, 153}, },
			{{-1, 75}, {36, 84}, {38, 86}, {134, 160}, },
			{{-1, 76}, {68, 109}, },
			{{-1, 77}, {126, 154}, },
			{{-1, 78}, {127, 155}, },
			{{-1, 79}, {129, 156}, },
			{{-1, 80}, {67, 107}, {131, 158}, {157, 168}, },
			{{-1, 22}, {24, 46}, {37, 46}, {169, 46}, {171, 46}, {184, 46}, {185, 46}, {188, 46}, {193, 46}, {201, 46}, {203, 46}, },
			{{-1, 179}, },
			{{-1, 81}, {6, 23}, {14, 23}, {16, 39}, {24, 23}, {35, 82}, {37, 23}, {87, 137}, {159, 23}, {161, 23}, {162, 137}, {163, 137}, {169, 23}, {171, 23}, {177, 23}, {181, 23}, {182, 137}, {183, 23}, {184, 23}, {185, 23}, {188, 23}, {191, 23}, {193, 23}, {198, 23}, {201, 23}, {202, 23}, {203, 23}, },
			{{-1, 24}, {14, 37}, {159, 169}, {161, 171}, {177, 184}, {181, 185}, {183, 188}, {191, 193}, {198, 201}, {202, 203}, },
			{{-1, 25}, },
			{{-1, 26}, {24, 47}, {37, 47}, {169, 47}, {171, 47}, {184, 47}, {185, 47}, {188, 47}, {193, 47}, {201, 47}, {203, 47}, },
			{{-1, 27}, {24, 48}, {37, 48}, {169, 48}, {171, 48}, {184, 48}, {185, 48}, {188, 48}, {193, 48}, {201, 48}, {203, 48}, },
			{{-1, 192}, },
			{{-1, 196}, },
			{{-1, 28}, {24, 49}, {37, 49}, {169, 49}, {171, 49}, {184, 49}, {185, 49}, {188, 49}, {193, 49}, {201, 49}, {203, 49}, },
			{{-1, 172}, {87, 138}, {182, 186}, },
			{{-1, 173}, {163, 174}, },
			{{-1, 187}, },
			{{-1, 29}, {24, 50}, {37, 50}, {169, 50}, {171, 50}, {184, 50}, {185, 50}, {188, 50}, {193, 50}, {201, 50}, {203, 50}, },
			{{-1, 30}, {24, 51}, {37, 51}, {169, 51}, {171, 51}, {184, 51}, {185, 51}, {188, 51}, {193, 51}, {201, 51}, {203, 51}, },
			{{-1, 31}, {24, 52}, {37, 52}, {169, 52}, {171, 52}, {184, 52}, {185, 52}, {188, 52}, {193, 52}, {201, 52}, {203, 52}, },
			{{-1, 32}, {24, 53}, {37, 53}, {169, 53}, {171, 53}, {184, 53}, {185, 53}, {188, 53}, {193, 53}, {201, 53}, {203, 53}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: 'inicio'",
			"expecting: 'caractere', 'real', 'inteiro', 'const', 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'avalie', identificador",
			"expecting: ':'",
			"expecting: '('",
			"expecting: 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'avalie', identificador",
			"expecting: '+', '-', '*', '/', ';', '>', '<', '=', '>=', '<=', '<>', '<-', 'de', 'ate', 'faca', 'passo', '[', ']', 'e', 'ou', 'xor', ')'",
			"expecting: 'fim.'",
			"expecting: '<-'",
			"expecting: 'fim.', 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'avalie', identificador",
			"expecting: 'fim.', 'escreva', 'leia', 'se', 'senao', 'fim se', 'repita', 'enquanto', 'fim enquanto', 'para', 'ate', 'fim para', 'avalie', 'caso', 'fim avalie', identificador",
			"expecting: string, numero, numero real",
			"expecting: '-', string, 'nao', '(', numero, numero real, identificador",
			"expecting: '-', 'nao', '(', numero, numero real, identificador",
			"expecting: 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'ate', 'avalie', identificador",
			"expecting: 'de'",
			"expecting: '-', '(', numero, numero real, identificador",
			"expecting: ';', ':'",
			"expecting: ')'",
			"expecting: '+', '-', '*', '/', ';', '>', '<', '=', '>=', '<=', '<>', ']', 'e', 'ou', 'xor', ')'",
			"expecting: '+', '-', '>', '<', '=', '>=', '<=', '<>', ')'",
			"expecting: '=', '<>', 'ou', ')'",
			"expecting: '=', '<>', 'ou', 'xor', ')'",
			"expecting: '=', '<>', 'e', 'ou', 'xor', ')'",
			"expecting: '+', '-', '>', '<', '=', '>=', '<=', '<>'",
			"expecting: numero, identificador",
			"expecting: '+', '-', ']'",
			"expecting: ';', '[', ','",
			"expecting: ';', ','",
			"expecting: '+', '-', ';'",
			"expecting: '+', '-', '>', '<', '>=', '<='",
			"expecting: 'entao'",
			"expecting: 'faca'",
			"expecting: 'ate', 'faca', 'passo'",
			"expecting: 'ate', 'passo'",
			"expecting: 'caso'",
			"expecting: '+', '-', ')'",
			"expecting: '+', '-', '*', '/', ';', '>', '<', '=', '>=', '<=', '<>', '<-', 'de', 'ate', 'faca', 'passo', ']', 'e', 'ou', 'xor', ')'",
			"expecting: numero",
			"expecting: '+', '-', '=', '<>', 'e', 'ou', 'xor', ')'",
			"expecting: 'ou', ')'",
			"expecting: ']'",
			"expecting: 'escreva', 'leia', 'se', 'senao', 'fim se', 'repita', 'enquanto', 'para', 'avalie', identificador",
			"expecting: 'escreva', 'leia', 'se', 'repita', 'enquanto', 'fim enquanto', 'para', 'avalie', identificador",
			"expecting: 'ate', 'faca'",
			"expecting: 'ate'",
			"expecting: 'escreva', 'leia', 'se', 'fim se', 'repita', 'enquanto', 'para', 'avalie', identificador",
			"expecting: 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'fim para', 'avalie', identificador",
			"expecting: 'escreva', 'leia', 'se', 'senao', 'repita', 'enquanto', 'para', 'avalie', 'caso', 'fim avalie', identificador",
			"expecting: 'senao', 'caso', 'fim avalie'",
			"expecting: 'fim avalie'",
			"expecting: 'escreva', 'leia', 'se', 'repita', 'enquanto', 'para', 'avalie', 'fim avalie', identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 6, 6, 6, 1, 7, 7, 7, 8, 7, 1, 7, 9, 5, 10, 6, 3, 11, 12, 13, 3, 3, 3, 3, 3, 3, 3, 14, 15, 1, 16, 17, 16, 18, 16, 19, 2, 1, 13, 19, 3, 3, 3, 3, 3, 3, 3, 3, 13, 13, 13, 13, 13, 13, 13, 20, 20, 20, 3, 19, 21, 19, 16, 22, 22, 21, 23, 22, 22, 21, 21, 24, 25, 26, 26, 22, 21, 27, 21, 7, 21, 28, 21, 19, 29, 30, 1, 31, 32, 13, 13, 13, 13, 13, 13, 13, 13, 5, 22, 3, 33, 26, 23, 21, 3, 19, 19, 19, 19, 16, 19, 19, 16, 19, 19, 19, 19, 19, 19, 16, 16, 16, 16, 16, 16, 16, 3, 34, 16, 35, 36, 36, 37, 38, 39, 40, 41, 31, 5, 1, 22, 26, 22, 42, 26, 21, 22, 21, 43, 25, 26, 19, 26, 8, 21, 8, 28, 28, 14, 44, 5, 1, 26, 45, 3, 46, 47, 35, 48, 6, 31, 8, 3, 3, 3, 8, 28, 8, 49, 50, 35, 35, 51, 3, 3, 8, 52, 50, 6, 14, 53, 3, 8, 6, 3, 54, 8, 51, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
