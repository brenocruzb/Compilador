/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AXorLmeiotermo extends PLmeiotermo
{
    private PLmeiotermo _lmeiotermo_;
    private PLmeio _lmeio_;
    private PLtermo _ltermo_;

    public AXorLmeiotermo()
    {
        // Constructor
    }

    public AXorLmeiotermo(
        @SuppressWarnings("hiding") PLmeiotermo _lmeiotermo_,
        @SuppressWarnings("hiding") PLmeio _lmeio_,
        @SuppressWarnings("hiding") PLtermo _ltermo_)
    {
        // Constructor
        setLmeiotermo(_lmeiotermo_);

        setLmeio(_lmeio_);

        setLtermo(_ltermo_);

    }

    @Override
    public Object clone()
    {
        return new AXorLmeiotermo(
            cloneNode(this._lmeiotermo_),
            cloneNode(this._lmeio_),
            cloneNode(this._ltermo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAXorLmeiotermo(this);
    }

    public PLmeiotermo getLmeiotermo()
    {
        return this._lmeiotermo_;
    }

    public void setLmeiotermo(PLmeiotermo node)
    {
        if(this._lmeiotermo_ != null)
        {
            this._lmeiotermo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lmeiotermo_ = node;
    }

    public PLmeio getLmeio()
    {
        return this._lmeio_;
    }

    public void setLmeio(PLmeio node)
    {
        if(this._lmeio_ != null)
        {
            this._lmeio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lmeio_ = node;
    }

    public PLtermo getLtermo()
    {
        return this._ltermo_;
    }

    public void setLtermo(PLtermo node)
    {
        if(this._ltermo_ != null)
        {
            this._ltermo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ltermo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lmeiotermo_)
            + toString(this._lmeio_)
            + toString(this._ltermo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lmeiotermo_ == child)
        {
            this._lmeiotermo_ = null;
            return;
        }

        if(this._lmeio_ == child)
        {
            this._lmeio_ = null;
            return;
        }

        if(this._ltermo_ == child)
        {
            this._ltermo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lmeiotermo_ == oldChild)
        {
            setLmeiotermo((PLmeiotermo) newChild);
            return;
        }

        if(this._lmeio_ == oldChild)
        {
            setLmeio((PLmeio) newChild);
            return;
        }

        if(this._ltermo_ == oldChild)
        {
            setLtermo((PLtermo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
