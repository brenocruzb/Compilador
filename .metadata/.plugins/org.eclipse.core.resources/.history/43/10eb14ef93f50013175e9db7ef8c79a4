/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseATotal(ATotal node);
    void caseASuperDeclaracaoVariavel(ASuperDeclaracaoVariavel node);
    void caseAVazioSuperDeclaracaoVariavel(AVazioSuperDeclaracaoVariavel node);
    void caseAConjuntoDeclaracaoVariavel(AConjuntoDeclaracaoVariavel node);
    void caseADconstanteDeclaracaoVariavel(ADconstanteDeclaracaoVariavel node);
    void caseADeclaracaoVariavel(ADeclaracaoVariavel node);
    void caseAEncadeamentoDeclaracaoVariavelVirgula(AEncadeamentoDeclaracaoVariavelVirgula node);
    void caseADeclaracaoVariavelVirgula(ADeclaracaoVariavelVirgula node);
    void caseAVariavel(AVariavel node);
    void caseAVetorVariavel(AVetorVariavel node);
    void caseACorpoPrograma(ACorpoPrograma node);
    void caseAVazioCorpoPrograma(AVazioCorpoPrograma node);
    void caseACTipo(ACTipo node);
    void caseAITipo(AITipo node);
    void caseATipo(ATipo node);
    void caseATipo1Valor(ATipo1Valor node);
    void caseAValor(AValor node);
    void caseAExp(AExp node);
    void caseAExpp(AExpp node);
    void caseAVazioExpp(AVazioExpp node);
    void caseASoma(ASoma node);
    void caseASubSoma(ASubSoma node);
    void caseATermo(ATermo node);
    void caseATermoo(ATermoo node);
    void caseAVazioTermoo(AVazioTermoo node);
    void caseAMult(AMult node);
    void caseADivMult(ADivMult node);
    void caseAFator(AFator node);
    void caseANumFator(ANumFator node);
    void caseAExpLogica(AExpLogica node);
    void caseANotExpLogica(ANotExpLogica node);
    void caseAExppLogica(AExppLogica node);
    void caseAVazioExppLogica(AVazioExppLogica node);
    void caseAMaqSimboloLogica(AMaqSimboloLogica node);
    void caseAMeqSimboloLogica(AMeqSimboloLogica node);
    void caseAIgSimboloLogica(AIgSimboloLogica node);
    void caseAMaigSimboloLogica(AMaigSimboloLogica node);
    void caseAMeigSimboloLogica(AMeigSimboloLogica node);
    void caseADifSimboloLogica(ADifSimboloLogica node);
    void caseAESimboloLogica(AESimboloLogica node);
    void caseAOuSimboloLogica(AOuSimboloLogica node);
    void caseAXorSimboloLogica(AXorSimboloLogica node);
    void caseATermoLogica(ATermoLogica node);

    void caseTAdicao(TAdicao node);
    void caseTSubtracao(TSubtracao node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTDivisao(TDivisao node);
    void caseTCaractere(TCaractere node);
    void caseTReal(TReal node);
    void caseTInteiro(TInteiro node);
    void caseTString(TString node);
    void caseTPontovirgula(TPontovirgula node);
    void caseTDoispontos(TDoispontos node);
    void caseTMaiorque(TMaiorque node);
    void caseTMenorque(TMenorque node);
    void caseTIgual(TIgual node);
    void caseTMaiorigual(TMaiorigual node);
    void caseTMenorigual(TMenorigual node);
    void caseTDiferente(TDiferente node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTConst(TConst node);
    void caseTPrograma(TPrograma node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTPonto(TPonto node);
    void caseTVar(TVar node);
    void caseTEscreva(TEscreva node);
    void caseTLeia(TLeia node);
    void caseTSe(TSe node);
    void caseTEntao(TEntao node);
    void caseTSenao(TSenao node);
    void caseTFimse(TFimse node);
    void caseTAspa(TAspa node);
    void caseTEnquanto(TEnquanto node);
    void caseTFimenquanto(TFimenquanto node);
    void caseTPara(TPara node);
    void caseTAte(TAte node);
    void caseTFaca(TFaca node);
    void caseTFimpara(TFimpara node);
    void caseTPasso(TPasso node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTFimavalie(TFimavalie node);
    void caseTAbrecolchete(TAbrecolchete node);
    void caseTFecharcolchete(TFecharcolchete node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTXor(TXor node);
    void caseTNao(TNao node);
    void caseTVirgula(TVirgula node);
    void caseTAbreparenteses(TAbreparenteses node);
    void caseTFechaparenteses(TFechaparenteses node);
    void caseTNumero(TNumero node);
    void caseTIdentificador(TIdentificador node);
    void caseTComentarioemlinha(TComentarioemlinha node);
    void caseTLf(TLf node);
    void caseTEspaco(TEspaco node);
    void caseTCr(TCr node);
    void caseTComentado(TComentado node);
    void caseTComentadofinal(TComentadofinal node);
    void caseTCorpo(TCorpo node);
    void caseTEstrela(TEstrela node);
    void caseTBarra(TBarra node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
