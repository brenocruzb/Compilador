/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATotal(ATotal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASuperDeclaracaoVariavel(ASuperDeclaracaoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioSuperDeclaracaoVariavel(AVazioSuperDeclaracaoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConjuntoDeclaracaoVariavel(AConjuntoDeclaracaoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADconstanteDeclaracaoVariavel(ADconstanteDeclaracaoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoVariavel(ADeclaracaoVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEncadeamentoDeclaracaoVariavelVirgula(AEncadeamentoDeclaracaoVariavelVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoVariavelVirgula(ADeclaracaoVariavelVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavel(AVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorVariavel(AVetorVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACorpoPrograma(ACorpoPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpCorpoPrograma(AExpCorpoPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioCorpoPrograma(AVazioCorpoPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACTipo(ACTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAITipo(AITipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipo(ATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrValor(AStrValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumValor(ANumValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValor(AValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExp(AExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermExp(ATermExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASoma(ASoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubSoma(ASubSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermo(ATermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatTermo(AFatTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMult(AMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivMult(ADivMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFator(AFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumFator(ANumFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIndFator(AIndFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpLogica(AExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotExpLogica(ANotExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExppLogica(AExppLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermExppLogica(ATermExppLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaqSimboloLogica(AMaqSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMeqSimboloLogica(AMeqSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgSimboloLogica(AIgSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaigSimboloLogica(AMaigSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMeigSimboloLogica(AMeigSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADifSimboloLogica(ADifSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAESimboloLogica(AESimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuSimboloLogica(AOuSimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimboloLogica(ASimboloLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoLogica(ATermoLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoSe(AComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeNaoComandoSe(ASeNaoComandoSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdicao(TAdicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSubtracao(TSubtracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultiplicacao(TMultiplicacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivisao(TDivisao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontovirgula(TPontovirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoispontos(TDoispontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorque(TMaiorque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorque(TMenorque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorigual(TMaiorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorigual(TMenorigual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimse(TFimse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspa(TAspa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimenquanto(TFimenquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimpara(TFimpara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimavalie(TFimavalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbrecolchete(TAbrecolchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFecharcolchete(TFecharcolchete node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreparenteses(TAbreparenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaparenteses(TFechaparenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroReal(TNumeroReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioemlinha(TComentarioemlinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLf(TLf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaco(TEspaco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCr(TCr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentado(TComentado node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentadofinal(TComentadofinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCorpo(TCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEstrela(TEstrela node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
