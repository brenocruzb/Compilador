/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ATermoo extends PTermoo
{
    private PMult _mult_;
    private PFator _fator_;
    private PTermoo _termoo_;

    public ATermoo()
    {
        // Constructor
    }

    public ATermoo(
        @SuppressWarnings("hiding") PMult _mult_,
        @SuppressWarnings("hiding") PFator _fator_,
        @SuppressWarnings("hiding") PTermoo _termoo_)
    {
        // Constructor
        setMult(_mult_);

        setFator(_fator_);

        setTermoo(_termoo_);

    }

    @Override
    public Object clone()
    {
        return new ATermoo(
            cloneNode(this._mult_),
            cloneNode(this._fator_),
            cloneNode(this._termoo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATermoo(this);
    }

    public PMult getMult()
    {
        return this._mult_;
    }

    public void setMult(PMult node)
    {
        if(this._mult_ != null)
        {
            this._mult_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mult_ = node;
    }

    public PFator getFator()
    {
        return this._fator_;
    }

    public void setFator(PFator node)
    {
        if(this._fator_ != null)
        {
            this._fator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fator_ = node;
    }

    public PTermoo getTermoo()
    {
        return this._termoo_;
    }

    public void setTermoo(PTermoo node)
    {
        if(this._termoo_ != null)
        {
            this._termoo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._mult_)
            + toString(this._fator_)
            + toString(this._termoo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._mult_ == child)
        {
            this._mult_ = null;
            return;
        }

        if(this._fator_ == child)
        {
            this._fator_ = null;
            return;
        }

        if(this._termoo_ == child)
        {
            this._termoo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._mult_ == oldChild)
        {
            setMult((PMult) newChild);
            return;
        }

        if(this._fator_ == oldChild)
        {
            setFator((PFator) newChild);
            return;
        }

        if(this._termoo_ == oldChild)
        {
            setTermoo((PTermoo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
